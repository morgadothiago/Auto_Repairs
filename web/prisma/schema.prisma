generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// ─────────────────────────────
//   MODELO DE USUÁRIO
// ─────────────────────────────
//

model User {
  id           String         @id @default(uuid())
  name         String
  email        String         @unique
  password     String
  role         Role           @default(USER)
  appointments Appointments[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

//
// ─────────────────────────────
//   MODELO DE LEADS
// ─────────────────────────────
//

model Leeads {
  id          String   @id @default(uuid())
  name        String
  phone       String
  email       String
  model       String
  plate       String
  year        Int
  serviceType String
  date        DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
// ─────────────────────────────
//   MODELO DE AGENDAMENTOS
// ─────────────────────────────
//

model Appointments {
  id          String   @id @default(uuid())
  name        String
  phone       String
  email       String
  model       String
  plate       String
  year        Int
  serviceType String
  date        DateTime

  // Relacionamento com usuário
  userId String
  user   User   @relation(fields: [userId], references: [id])

  // Confirmação
  confirmationStatus ConfirmationStatus @default(PENDING)
  confirmedAt        DateTime?

  // Histórico de confirmações (opcional)
  confirmations AppointmentConfirmation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//
// ─────────────────────────────
//   MODELO DE CONFIRMAÇÃO DE AGENDAMENTO
// ─────────────────────────────
//

model AppointmentConfirmation {
  id            String             @id @default(uuid())
  appointmentId String
  appointment   Appointments       @relation(fields: [appointmentId], references: [id])
  status        ConfirmationStatus
  confirmedBy   String?
  createdAt     DateTime           @default(now())
}

enum ConfirmationStatus {
  PENDING
  CONFIRMED
  CANCELED
}
